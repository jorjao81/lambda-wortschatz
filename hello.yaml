AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31

Resources:
  HelloFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: HelloFunction
      Handler: lambda_function.lambda_handler
      Runtime: python2.7
      Timeout: 120
      Role: !GetAtt HelloRole.Arn
      Events:
        GetResource:
          Type: Api
          Properties:
            Path: /resource/{resourceId}
            Method: get

  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: "lambda:invokeFunction"
      FunctionName: !GetAtt HelloFunction.Arn
      Principal: "apigateway.amazonaws.com"
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${HelloApi}/*"


  HelloApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: Test API

  UsersResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref HelloApi
      ParentId: !GetAtt HelloApi.RootResourceId
      PathPart: user

  UsersGet:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref HelloApi
      ResourceId: !Ref UsersResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${HelloFunction.Arn}/invocations"

  HelloRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: AllowUpdatingOfBlogs
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ec2:DescribeRegions
                  - ec2:DescribeInstances
                Resource: "*"

              - Effect: Allow
                Action:
                  - "logs:*"
                Resource: "arn:aws:logs:*:*:*"


